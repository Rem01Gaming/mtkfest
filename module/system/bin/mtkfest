#!/bin/sh
# This file is part of Mtkfest.
#
# Mtkfest is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Mtkfest is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Mtkfest.  If not, see <https://www.gnu.org/licenses/>.
#
# Copyright (C) 2024 Rem01Gaming

cpu_cores="$(($(nproc --all) - 1))"
game_list_filter="com.example.gamelist1|com.example.gamelist2$(awk '!/^[[:space:]]*$/ && !/^#/ && !(/[[:alnum:]]+[[:space:]]+[[:alnum:]]+[[:space:]]+[[:alnum:]]+/) {sub("-e ", ""); printf "|%s", $0}' "/data/mtkfest/gamelist.txt")"

write_val() {
	if [ -f $2 ]; then
		echo $1 >$2
	fi
}

lock_val() {
	[ ! -f "$2" ] && return
	umount "$2"

	chown root:root "$2"
	chmod 0666 "$2"
	echo "$1" >"$2"
	chmod 0444 "$2"

	local TIME=$(date +"%s%N")
	echo "$1" >/dev/mount_mask_$TIME
	mount --bind /dev/mount_mask_$TIME "$2"
	rm /dev/mount_mask_$TIME
}

performance_mode() {
	# CPU tweaks
	cpu="0"
	while [ $cpu -lt $cpu_cores ]; do
		cpu_dir="/sys/devices/system/cpu/cpu${cpu}"
		if [ -d "$cpu_dir" ]; then
			echo "performance" > "${cpu_dir}/cpufreq/scaling_governor"
		fi
		cpu="$((cpu + 1))"
	done

	# MTK Power and CCI mode
	write_val "1" /proc/cpufreq/cpufreq_cci_mode
	write_val "3" /proc/cpufreq/cpufreq_power_mode

	# EAS/HMP Switch
	lock_val "0" /sys/devices/system/cpu/eas/enable

	# Idle charging
	write_val "0 1" /proc/mtk_battery_cmd/current_cmd

	# Disable PPM (this is fire dumpster)
	write_val "0" /proc/ppm/enabled

	# GPU Frequency
	if [ ! $(uname -r | cut -d'.' -f1,2 | sed 's/\.//') -gt 500 ]; then
		gpu_freq="$(cat /proc/gpufreq/gpufreq_opp_dump | grep -o 'freq = [0-9]*' | sed 's/freq = //' | sort -nr | head -n 1)"
		echo "$gpu_freq" > /proc/gpufreq/gpufreq_opp_freq
	else
		gpu_freq="$(cat /proc/gpufreqv2/gpu_working_opp_table | awk '{print $3}' | sed 's/,//g' | sort -nr | head -n 1)"
		gpu_volt="$(cat /proc/gpufreqv2/gpu_working_opp_table | awk -v freq="$freq" '$0 ~ freq {gsub(/.*, volt: /, ""); gsub(/,.*/, ""); print}')"
		echo "${gpu_freq} ${gpu_volt}" >/proc/gpufreqv2/fix_custom_freq_volt
	fi

	# Disable GPU Power limiter
	if [ -f "/proc/gpufreq/gpufreq_power_limited" ]; then
		echo "ignore_batt_oc 1" > /proc/gpufreq/gpufreq_power_limited
		echo "ignore_batt_percent 1" > /proc/gpufreq/gpufreq_power_limited
		echo "ignore_low_batt 1" > /proc/gpufreq/gpufreq_power_limited
		echo "ignore_thermal_protect 1" > /proc/gpufreq/gpufreq_power_limited
		echo "ignore_pbm_limited 1" > /proc/gpufreq/gpufreq_power_limited
	fi

	# Disable battery current limiter
	write_val "stop 1" /proc/mtk_batoc_throttling/battery_oc_protect_stop

	# DRAM Frequency
	if [ ! $(uname -r | cut -d'.' -f1,2 | sed 's/\.//') -gt 500 ]; then
		echo "0" >/sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
	else
		echo "0" >/sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
	fi

	# Mediatek's APU freq
	write_val "0" /sys/module/mmdvfs_pmqos/parameters/force_step

	# Touchpanel
        tp_path="/proc/touchpanel"
	write_val "1" $tp_path/game_switch_enable
	write_val "0" $tp_path/oplus_tp_limit_enable
        write_val "0" $tp_path/oppo_tp_limit_enable
        write_val "1" $tp_path/oplus_tp_direction
        write_val "1" $tp_path/oppo_tp_direction
}

normal_mode() {
	# CPU tweaks
	cpu="0"

        # add support for MT6765, by @eraselk
        if [[ "$(getprop ro.hardware)" == "mt6765" ]] && [[ "$(getprop ro.product.brand)" == "realme" ]]; then
        cpu_gov="schedplus"
        else
        cpu_gov="schedutil"
        fi

	while [ $cpu -lt $cpu_cores ]; do
		cpu_dir="/sys/devices/system/cpu/cpu${cpu}"
		if [ -d "$cpu_dir" ]; then
			echo "$cpu_gov" >"${cpu_dir}/cpufreq/scaling_governor"
		fi
		cpu="$((cpu + 1))"
	done

	# Idle charging
	write_val "0 0" /proc/mtk_battery_cmd/current_cmd

	# Enable back PPM
	write_val "1" /proc/ppm/enabled

	# MTK Power and CCI mode
	write_val "0" /proc/cpufreq/cpufreq_cci_mode
	write_val "0" /proc/cpufreq/cpufreq_power_mode

	# EAS/HMP Switch
	lock_val "1" /sys/devices/system/cpu/eas/enable

	# GPU Frequency
	if [ ! $(uname -r | cut -d'.' -f1,2 | sed 's/\.//') -gt 500 ]; then
		echo "0" >/proc/gpufreq/gpufreq_opp_freq 2>/dev/null
	else
		echo "0 0" >/proc/gpufreqv2/fix_custom_freq_volt
	fi

	# Disable GPU Power limiter
	if [ -f "/proc/gpufreq/gpufreq_power_limited" ]; then
		echo "ignore_batt_oc 0" >/proc/gpufreq/gpufreq_power_limited
		echo "ignore_batt_percent 0" >/proc/gpufreq/gpufreq_power_limited
		echo "ignore_low_batt 0" >/proc/gpufreq/gpufreq_power_limited
		echo "ignore_thermal_protect 0" >/proc/gpufreq/gpufreq_power_limited
		echo "ignore_pbm_limited 0" >/proc/gpufreq/gpufreq_power_limited
	fi

	# Disable Power Budget management for new 5.x kernels
	write_val "stop 0" /proc/pbm/pbm_stop

	# Disable battery current limiter
	write_val "stop 0" /proc/mtk_batoc_throttling/battery_oc_protect_stop

	# DRAM Frequency
	if [ ! $(uname -r | cut -d'.' -f1,2 | sed 's/\.//') -gt 500 ]; then
		echo "-1" > /sys/devices/platform/10012000.dvfsrc/helio-dvfsrc/dvfsrc_req_ddr_opp
	else
		echo "-1" > /sys/kernel/helio-dvfsrc/dvfsrc_force_vcore_dvfs_opp
	fi

	# Mediatek's APU freq
	write_val "-1" /sys/module/mmdvfs_pmqos/parameters/force_step

	# Touchpanel
	tp_path="/proc/touchpanel"
	write_val "0" $tp_path/game_switch_enable
	write_val "1" $tp_path/oplus_tp_limit_enable
        write_val "1" $tp_path/oppo_tp_limit_enable
        write_val "0" $tp_path/oplus_tp_direction
        write_val "0" $tp_path/oppo_tp_direction
}
apply_mode() {
	if [[ "$1" == "1" ]] && [[ ! "$cur_mode" == "1" ]]; then
		export cur_mode="1"
		renice -n -20 -p $pid
		ionice -c 2 -n 0 -p $pid
		/system/bin/am start -a android.intent.action.MAIN -e toasttext "Boosting game $gamestart" -n bellavita.toast/.MainActivity
		performance_mode
	elif [[ "$1" == "0" ]] && [[ ! "$cur_mode" == "0" ]]; then
		export cur_mode="0"
		normal_mode
	fi
}

perf_common() {
	# CPU tweaks
	cpu=0
	while [ $cpu -lt $cpu_cores ]; do
		cpu_dir="/sys/devices/system/cpu/cpu${cpu}"
		if [ -d "$cpu_dir" ]; then
			echo 1 > ${cpu_dir}/online
			chmod 0644 "${cpu_dir}/cpufreq/scaling_governor"
			chmod 000 "${cpu_dir}/cpufreq/cpuinfo_max_freq"
			chmod 000 "${cpu_dir}/cpu_capacity"
			chmod 000 "${cpu_dir}/topology/physical_package_id"
		fi
		cpu="$((cpu + 1))"
	done

	# Networking tweaks
	echo "cubic" > /proc/sys/net/ipv4/tcp_congestion_control
	echo "1" > /proc/sys/net/ipv4/tcp_low_latency
	echo "1" > /proc/sys/net/ipv4/tcp_ecn
	echo "3" > /proc/sys/net/ipv4/tcp_fastopen
	echo "1" > /proc/sys/net/ipv4/tcp_sack
	echo "0" > /proc/sys/net/ipv4/tcp_timestamps

	# Disable ccci debugging
	write_val 0 /sys/kernel/ccci/debug

	# Thermal governor
	chmod 0644 /sys/class/thermal/thermal_zone0/available_policies
	if [[ $(cat /sys/class/thermal/thermal_zone0/available_policies) == *step_wise* ]]; then
		for thermal in /sys/class/thermal/thermal_zone*; do
			chmod 0644 ${thermal}/policy
			echo "step_wise" >${thermal}/policy
		done
	fi

	# Push notification
	su -lp 2000 -c "/system/bin/cmd notification post -S bigtext -t \"MTKFEST\" "Tag$(date +%s)" \"Tweaks applied successfully\""
}

perfmon() {
	while true; do
		window=$(dumpsys window)
		gamestart=$(echo "$window" | grep -E 'mCurrentFocus|mFocusedApp' | grep -Eo "$game_list_filter" | tail -n 1)
		screenoff=$(echo "$window" | grep mScreen | grep -Eo "false" | tail -n 1)
		if [[ $gamestart == *.* ]] && [[ ! $screenoff == "false" ]]; then
			pid="$(pidof $gamestart)"
			apply_mode 1 # Apply performance mode
		else
			apply_mode 0 # Apply normal mode
		fi
		sleep 10
	done
}

case $1 in
"-u") wget -O /data/mtkfest/gamelist.txt https://gist.github.com/Rem01Gaming/02f2cf5c67119b361e6a6349392845bf/raw/gamelist.txt ;;
*)
	perf_common
	perfmon # Start monitoring for games
	;;
esac
